@page "/weather"
@using VideoManager.Models
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@inject IRealmService RealmService
@rendermode InteractiveServer

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<section>

    <p> Block 1: Realm Editor </p>

    <EditForm EditContext="@editContext">

        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Realm Name:</label>
            <InputText @bind-Value="currentRealm.name" Placeholder="Enter name" />
        </div>

        <div class="mb-3">
            <label class="form-label">Realm View:</label>
            <InputText @bind-Value="currentRealm.view" Placeholder="Enter view" />
        </div>

        @if (editContext.Validate())
        {
            <Button @ref="addButton" Color="ButtonColor.Primary" @onclick="HandleButtonAddTagClick"> Add </Button>
            <Button @ref="deleteButton" Color="ButtonColor.Danger" @onclick="HandleButtonDeleteTagClick"> Delete </Button>
        }
        else
        {
            <Button @ref="addButton" Color="ButtonColor.Secondary" Disabled="true"> Add </Button>
            <Button @ref="deleteButton" Color="ButtonColor.Secondary" Disabled="true"> Delete </Button>
        }

    </EditForm>

</section>

<section>

    <p> Block 2: Realm Choice </p>

    @if (allRealms == null)
    {
        <p role="status">No realms found...</p>
    }
    else
    {

        <Grid TItem="Realm"
              AllowRowClick="true"
              AllowSorting="true"
              Class="table table-hover"
              Data="allRealms"
              HeaderRowCssClass="bg-primary text-white border-bottom-0"
              OnRowClick="OnRowClick"
              Responsive="true">

            <GridColumns>
                <GridColumn TItem="Realm" HeaderText="Name">
                    @context.name
                </GridColumn>

                <GridColumn TItem="Realm" HeaderText="View">
                    @context.view
                </GridColumn>
            </GridColumns>

        </Grid>
    }

</section>

@code {

    private Realm currentRealm = new Realm();
    private List<Realm> allRealms = default!;

    private EditContext editContext = default!;

    private Button addButton = default!;
    private Button deleteButton = default!;

    private bool isConnected;

    protected override void OnInitialized()
    {
        editContext = new EditContext(currentRealm);
        base.OnInitialized();
    }

    protected override async Task OnInitializedAsync()
    {
        currentRealm.name = "";
        allRealms = await RealmService.GetRealmList();
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isConnected = true;
            StateHasChanged();
        }
    }

    private async Task OnRowClick(GridRowEventArgs<Realm> args)
    {
        currentRealm = args.Item;
    }

    private async Task HandleButtonAddTagClick()
    {
        addButton.ShowLoading("Adding...");

        // await Task.Delay(1000);
        await RealmService.CreateRealm(currentRealm.name, currentRealm.view);

        allRealms = await RealmService.GetRealmList();

        addButton.HideLoading();
    }

    private async Task HandleButtonDeleteTagClick()
    {
        deleteButton.ShowLoading("Deleting...");

        // await Task.Delay(1000);
        await RealmService.DeleteRealm(currentRealm.name);

        allRealms = await RealmService.GetRealmList();

        deleteButton.HideLoading();
    }

}
